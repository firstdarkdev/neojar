plugins {
    id 'java'
    id "com.hypherionmc.modutils.orion" version "1.0.+"
    id 'maven-publish'
}

// Edit in gradle.properties
group = project_group
version = "${version_major}.${version_minor}.${version_patch}"

orion.setup {
    enableMirrorMaven = true
    enableReleasesMaven = true

    dopplerToken = System.getenv("DOPPLER_TOKEN")

    versioning {
        identifier("release")
        uploadBuild(true)
    }
}

repositories {
    mavenCentral()
}

var commonImplementation = configurations.create("commonImplementation")

sourceSets {
    forge
    neoforge
    neoForgeModern
}

sourceSets.configureEach {
    var configName = "${name}Implementation"

    if (name == "main")
        configName = "implementation"

    configurations.named(configName).configure {
        extendsFrom(commonImplementation)
    }
}

dependencies {
    add("commonImplementation", "commons-io:commons-io:2.19.0")

    forgeImplementation("net.minecraftforge:fmlloader:1.20.4-49.2.0")
    forgeImplementation("net.minecraftforge:securemodules:2.2.21")

    neoforgeImplementation("net.neoforged.fancymodloader:loader:2.0.17")
    neoforgeImplementation("cpw.mods:securejarhandler:2.1.24")

    neoForgeModernImplementation("net.neoforged.fancymodloader:loader:4.0.39")
    neoForgeModernImplementation("cpw.mods:securejarhandler:3.0.8")
}

compileForgeJava {
    it.options.release = 17
    it.options.encoding = "UTF-8"
}

compileNeoforgeJava {
    it.options.release = 17
    it.options.encoding = "UTF-8"
}

tasks.register("buildJar", org.gradle.jvm.tasks.Jar) {
    dependsOn(compileForgeJava, compileNeoforgeJava, processNeoforgeResources, processForgeResources)
    from(compileNeoforgeJava.destinationDirectory, compileForgeJava.destinationDirectory,
            processNeoforgeResources.destinationDir, processForgeResources.destinationDir
    )
    exclude("*.bin")
}

compileForgeJava {
    it.options.release = 17
    it.options.encoding = "UTF-8"
}

compileNeoforgeJava {
    it.options.release = 17
    it.options.encoding = "UTF-8"
}

compileNeoForgeModernJava {
    it.options.release = 21
    it.options.encoding = "UTF-8"
}

tasks.register("buildModernJar", org.gradle.jvm.tasks.Jar) {
    dependsOn(compileForgeJava, compileNeoForgeModernJava, processNeoForgeModernResources, processForgeResources)
    from(compileNeoForgeModernJava.destinationDirectory, compileForgeJava.destinationDirectory,
            processNeoForgeModernResources.destinationDir, processForgeResources.destinationDir
    )
    exclude("*.bin")
    archiveClassifier.set("modern")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(buildJar)
            artifact(buildModernJar)
        }
    }

    repositories {
        maven orion.getPublishingMaven()
    }
}